AWSTemplateFormatVersion: 2010-09-09
Description: A CloudFormation template to setup ECS Service and Task Definitions for use in Service Connect
Parameters:
  AutoScalingTargetValue:
    Type: Number
    Default: 50
  CertificateStackName:
    Type: String
    Default: ""
  ContainersInTaskDefinition:
    Description: How many Container(x) are defined in parameters
    Type: Number
  Container1ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container1ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container1AppProtocol:
    Description: The application protocol that's used for the port mapping. This parameter only applies to Service Connect. 
    Type: String
    Default: ""
  Container1HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container1ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container1ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container1ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container1ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container1Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container1SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container1SecretsArn:
    Description: ARN of the secrets manager containing JSON elements for use in the containers environment setup.
    Type: String
    Default: ""
  Container1SecretsItemList:
    Description: Command seperated string of keys used to pull in the environment variables.
    Type: CommaDelimitedList
    Default: ""
  Container2ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container2ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container2HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container2ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container2ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container2ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container2ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container2Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container2SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container3ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container3ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container3HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container3ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container3ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container3ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container3ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container3Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container3SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container4ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container4ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container4HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container4ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container4ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container4ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container4ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container4Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container4SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container5ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container5ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container5HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container5ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container5ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container5ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container5ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container5Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container5SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container6ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container6ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container6HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container6ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container6ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container6ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container6ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container6Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container6SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container7ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container7ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container7HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container7ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container7ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container7ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container7ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container7Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container7SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container8ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container8ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container8HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container8ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container8ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container8ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container8ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container8Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container8SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container9ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container9ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container9HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container9ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container9ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container9ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container9ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container9Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container9SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  Container10ALBListenerRuleType:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
    AllowedValues:
      - "host-header"
      - ""
  Container10ALBListenerRuleValue:
    Description: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types
    Type: String
    Default: ""
  Container10HealthCheckPath:
    Description: URI to test for container healthiness
    Type: String
    Default: ""
  Container10ContainerName:
    Description: Name of container to run in Task Instance
    Type: String
    Default: ""
  Container10ImageArn:
    Description: ARN of image to use for container in Task Defintion
    Type: String
    Default: ""
  Container10ImageStackName:
    Description: Name of stack which created the ECR repository holding the container image
    Type: String
    Default: ""
  Container10ImageTag:
    Description: Image tag to be used in for this container
    Type: String
    Default: "latest"
  Container10Port:
    Description: Port to expose from the Task Instance
    Type: Number
    Default: 0
  Container10SecretsStackName:
    Description: Stack used to store secret environment variables for the container
    Type: String
    Default: ""
  ContainersHaveMemoryReservations:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  DesiredTaskInstancesInService:
    Type: Number
    Default: 1
  ECSTaskDefCPU:
    Description: The number of cpu units used by the task.
    Type: String
    Default: ""
  ECSTaskDefMemory:
    Description: The amount (in MiB) of memory used by the task.
    Type: String
    Default: ""
  ECSClusterStackName:
    Description: Name of the stack which created the ECS Cluster
    Type: String
  ECSServiceDeploymentController:
    Description: The deployment controller type to use. There are three deployment controller types available
    Type: String
    Default: ECS
    AllowedValues:
      - ECS
      - CODE_DEPLOY
      - EXTERNAL
  EnableFirelens:
    Description: Enable log streaming through Kinesis Firehose
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  EnableFluentd:
    Description: Enable log streaming through Fluentd
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  Environment:
    Description: Environment infrastructure is being deployed in
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - shared
      - prod
      - test
  LoadBalancerEnableHttp2Routing:
    Description:  Indicates whether HTTP/2 is enabled. The possible values are true and false.
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  LoadBalancerEnableLogging:
    Description: Enable logging of ALB access logs to S3
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  LogGroup:
    Description: Name of the log group
    Type: String
    Default: "/ecs/"
  ECSTaskDefEphemeralStorageSizeInGB:
    Description: Size of the ephemeral stroage to be associated with the Task Definition
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 200
  HostedZoneId:
    Type: String
    Default: ""
  HostedZoneName:
    Type: String
    Default: ""
  LaunchType:
    Type: String
    Default: FARGATE
    AllowedValues:
      - FARGATE
      - EC2
  LoadBalancerStickinessType:
    Type: String
    Default: ''
    AllowedValues:
      - lb_cookie
      - app_cookie
      - source_ip
      - source_ip_dest_ip
      - source_ip_dest_ip_proto
      - ''
  LoadBalancerType:
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - alb-internal
  MatcherHttpCode:
    Description: Specifies the HTTP codes that healthy targets must use when responding to an HTTP health check.
    Type: String
    Default: 200-299,301,302
  MaxTaskInstancesInService:
    Type: Number
    Default: 10
  MinTaskInstancesInService:
    Type: Number
    Default: 2
  NetworkMode:
    Type: String
    Description: The Docker networking mode to use for the containers in the task.
    Default: awsvpc
    AllowedValues:
      - awsvpc
      - bridge
      - host
      - none
  LoadBalancerHttpPort:
    Type: Number
    Default: 0
  LoadBalancerHttpsPort:
    Type: Number
    Default: 0
  ECSTaskDefCpuArchitecture:
    Description: X86_64 or ARM64 for the task defintion
    Type: String
    Default: X86_64
    AllowedValues:
      - X86_64
      - ARM64
  SecurityGroupStackName:
    Type: String
    Default: ""
  SecurityGroupStackExportVariableName:
    Type: String
    Default: SecurityGroupId
  ServiceName:
    Description: Name given to the ECS Service
    Type: String
  Subdomain:
    Type: String
    Default: ""
  VPCStackName:
    Description: Name of the stack used to create the VPC
    Type: String
Conditions:
  Container1HasAppProtocol: !Not 
    - !Equals 
      - !Ref Container1AppProtocol
      - ""
  CreateEphemeralStorageCondition: !Not 
    - !Equals 
      - !Ref ECSTaskDefEphemeralStorageSizeInGB
      - 20
  CreateLoadBalancerCondition: !Not
    - !Equals 
      - !Ref LoadBalancerType
      - ""
  CreatePublicHTTPListener: !And 
    - !Condition CreateLoadBalancerCondition
    - !Not 
      - !Equals 
        - !Ref LoadBalancerHttpPort
        - 0
  CreatePublicHTTPSListener: !And 
    - !Condition CreateLoadBalancerCondition
    - !Not 
      - !Equals 
        - !Ref LoadBalancerHttpsPort
        - 0
  CreateRoute53RecordSet: !And 
    - !Condition CreateLoadBalancerCondition
    - !Not  
      - !Equals 
        - !Ref Subdomain
        - ""
    - !Not  
      - !Equals 
        - !Ref HostedZoneName
        - ""
    - !Not  
      - !Equals 
        - !Ref HostedZoneId
        - ""
  EnableFirelensCondition: !Equals 
    - !Ref EnableFirelens
    - "true"
  EnableFluentdCondition: !Equals 
    - !Ref EnableFluentd
    - "true"
  IsFargateLaunchType: !Equals 
    - !Ref LaunchType
    - "FARGATE"
  IsECSServiceDeploymentControllerUsingECS: !Equals 
    - !Ref ECSServiceDeploymentController
    - "ECS"
  LoadBalancerEnableLoggingCondition: !Equals 
    - !Ref LoadBalancerEnableLogging
    - true
  TaskDefitionContainer1HasExposedPort: !Not 
    - !Equals 
      - !Ref Container1Port
      - 0
  TaskDefitionContainer1HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container1HealthCheckPath
      - ""
  TaskDefitionContainer1HasSecretStack: !Not 
    - !Equals 
      - !Ref Container1SecretsStackName
      - ""
  TaskDefitionContainer1HasSecretsArn: !Not 
    - !Equals 
      - !Ref Container1SecretsArn
      - ""
  TaskDefitionContainer1UsesImageArn: !Not 
    - !Equals 
      - !Ref Container1ImageArn
      - ""
  TaskDefitionContainer2HasExposedPort: !Not 
    - !Equals 
      - !Ref Container2Port
      - 0
  TaskDefitionContainer2HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container2HealthCheckPath
      - ""
  TaskDefitionContainer2HasSecretStack: !Not 
    - !Equals 
      - !Ref Container2SecretsStackName
      - ""
  TaskDefitionContainer2UsesImageArn: !Not 
    - !Equals 
      - !Ref Container2ImageArn
      - ""
  TaskDefitionContainer3HasExposedPort: !Not 
    - !Equals 
      - !Ref Container3Port
      - 0
  TaskDefitionContainer3HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container3HealthCheckPath
      - ""
  TaskDefitionContainer3HasSecretStack: !Not 
    - !Equals 
      - !Ref Container3SecretsStackName
      - ""
  TaskDefitionContainer3UsesImageArn: !Not 
    - !Equals 
      - !Ref Container3ImageArn
      - ""
  TaskDefitionContainer4HasExposedPort: !Not 
    - !Equals 
      - !Ref Container4Port
      - 0
  TaskDefitionContainer4HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container4HealthCheckPath
      - ""
  TaskDefitionContainer4HasSecretStack: !Not 
    - !Equals 
      - !Ref Container4SecretsStackName
      - ""
  TaskDefitionContainer4UsesImageArn: !Not 
    - !Equals 
      - !Ref Container4ImageArn
      - ""
  TaskDefitionContainer5HasExposedPort: !Not 
    - !Equals 
      - !Ref Container5Port
      - 0
  TaskDefitionContainer5HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container5HealthCheckPath
      - ""
  TaskDefitionContainer5HasSecretStack: !Not 
    - !Equals 
      - !Ref Container5SecretsStackName
      - ""
  TaskDefitionContainer5UsesImageArn: !Not 
    - !Equals 
      - !Ref Container5ImageArn
      - ""
  TaskDefitionContainer6HasExposedPort: !Not 
    - !Equals 
      - !Ref Container6Port
      - 0
  TaskDefitionContainer6HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container6HealthCheckPath
      - ""
  TaskDefitionContainer6HasSecretStack: !Not 
    - !Equals 
      - !Ref Container6SecretsStackName
      - ""
  TaskDefitionContainer6UsesImageArn: !Not 
    - !Equals 
      - !Ref Container6ImageArn
      - ""
  TaskDefitionContainer7HasExposedPort: !Not 
    - !Equals 
      - !Ref Container7Port
      - 0
  TaskDefitionContainer7HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container7HealthCheckPath
      - ""
  TaskDefitionContainer7HasSecretStack: !Not 
    - !Equals 
      - !Ref Container7SecretsStackName
      - ""
  TaskDefitionContainer7UsesImageArn: !Not 
    - !Equals 
      - !Ref Container7ImageArn
      - ""
  TaskDefitionContainer8HasExposedPort: !Not 
    - !Equals 
      - !Ref Container8Port
      - 0
  TaskDefitionContainer8HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container8HealthCheckPath
      - ""
  TaskDefitionContainer8HasSecretStack: !Not 
    - !Equals 
      - !Ref Container8SecretsStackName
      - ""
  TaskDefitionContainer8UsesImageArn: !Not 
    - !Equals 
      - !Ref Container8ImageArn
      - ""
  TaskDefitionContainer9HasExposedPort: !Not 
    - !Equals 
      - !Ref Container9Port
      - 0
  TaskDefitionContainer9HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container9HealthCheckPath
      - ""
  TaskDefitionContainer9HasSecretStack: !Not 
    - !Equals 
      - !Ref Container9SecretsStackName
      - ""
  TaskDefitionContainer9UsesImageArn: !Not 
    - !Equals 
      - !Ref Container9ImageArn
      - ""
  TaskDefitionContainer10HasExposedPort: !Not 
    - !Equals 
      - !Ref Container10Port
      - 0
  TaskDefitionContainer10HasHealthCheck: !Not 
    - !Equals 
      - !Ref Container10HealthCheckPath
      - ""
  TaskDefitionContainer10HasSecretStack: !Not 
    - !Equals 
      - !Ref Container10SecretsStackName
      - ""
  TaskDefitionContainer10UsesImageArn: !Not 
    - !Equals 
      - !Ref Container10ImageArn
      - ""
  TaskDefinitionHas10TargetContainers: !Equals 
    - !Ref ContainersInTaskDefinition
    - 10
  TaskDefinitionHasAtLeast9TargetContainers: !Or 
    - !Condition TaskDefinitionHas10TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 9
  TaskDefinitionHasAtLeast8TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast9TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 8
  TaskDefinitionHasAtLeast7TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast8TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 7
  TaskDefinitionHasAtLeast6TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast7TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 6
  TaskDefinitionHasAtLeast5TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast6TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 5
  TaskDefinitionHasAtLeast4TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast5TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 4
  TaskDefinitionHasAtLeast3TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast4TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 3
  TaskDefinitionHasAtLeast2TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast3TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 2
  TaskDefinitionHasAtLeast1TargetContainers: !Or 
    - !Condition TaskDefinitionHasAtLeast2TargetContainers
    - !Equals 
      - !Ref ContainersInTaskDefinition
      - 1
  UseIPTargetType: !Equals
    - !Ref NetworkMode
    - "awsvpc"
Mappings:
  RegionARNPrefix:
    us-east-1:
      ARNPrefix: "arn:aws:"
    us-west-1:
      ARNPrefix: "arn:aws:"
    us-west-2:
      ARNPrefix: "arn:aws:"
    eu-west-1:
      ARNPrefix: "arn:aws:"
    ap-northeast-1:
      ARNPrefix: "arn:aws:"
    ap-northeast-2:
      ARNPrefix: "arn:aws:"
    ap-southeast-1:
      ARNPrefix: "arn:aws:"
    ap-southeast-2:
      ARNPrefix: "arn:aws:"
    ap-south-1:
      ARNPrefix: "arn:aws:"
    us-east-2:
      ARNPrefix: "arn:aws:"
    sa-east-1:
      ARNPrefix: "arn:aws:"
    cn-north-1:
      ARNPrefix: "arn:aws-cn:"
    eu-central-1:
      ARNPrefix: "arn:aws:"
  RegionELBAccountId:
    us-east-1:
      AccountId: "127311923021"
    us-west-1:
      AccountId: "027434742980"
    us-west-2:
      AccountId: "797873946194"
    eu-west-1:
      AccountId: "156460612806"
    ap-northeast-1:
      AccountId: "582318560864"
    ap-northeast-2:
      AccountId: "600734575887"
    ap-southeast-1:
      AccountId: "114774131450"
    ap-southeast-2:
      AccountId: "783225319266"
    ap-south-1:
      AccountId: "718504428378"
    us-east-2:
      AccountId: "033677994240"
    sa-east-1:
      AccountId: "507241528517"
    cn-north-1:
      AccountId: "638102146993"
    eu-central-1:
      AccountId: "054676820928"
Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      # Name of the task definition. Subsequent versions of the task definition are grouped together under this name.
      Family: !Join ["-", [!Ref ServiceName, TaskDefinition1]]
      # awsvpc is required for Fargate
      NetworkMode: !Ref NetworkMode
      # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
      # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
      # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
      # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
      # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
      Cpu: !Ref ECSTaskDefCPU
      # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
      # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
      # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
      # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
      # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
      Memory: !Ref ECSTaskDefMemory
      EphemeralStorage: !If
        - CreateEphemeralStorageCondition
        - SizeInGiB: !Ref ECSTaskDefEphemeralStorageSizeInGB
        - !Ref AWS::NoValue
      # A role needed by ECS.
      # "The ARN of the task execution role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role."
      # "There is an optional task execution IAM role that you can specify with Fargate to allow your Fargate tasks to make API calls to Amazon ECR."
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      # "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants containers in the task permission to call AWS APIs on your behalf."
      TaskRoleArn: !Ref TaskRole
      RuntimePlatform: 
        CpuArchitecture: !Ref ECSTaskDefCpuArchitecture
      ContainerDefinitions:
        - !If
          - TaskDefinitionHasAtLeast1TargetContainers
          - Name: !Ref Container1ContainerName
            Image: !Join
              - ":"
              - - !Ref Container1ImageArn
                - !Ref Container1ImageTag
            PortMappings: !If
              - TaskDefitionContainer1HasExposedPort
              - - ContainerPort: !Ref Container1Port
                  HostPort: !Ref Container1Port
                  Name: !Sub "${Container1ContainerName}-${Container1Port}"
                  AppProtocol: !If 
                    - Container1HasAppProtocol
                    - !Ref Container1AppProtocol
                    - !Ref AWS::NoValue
                  Protocol: tcp
              - !Ref AWS::NoValue
            # Send logs to CloudWatch Logs
            Secrets:
              - Name: !Select [0, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [0, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [1, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [1, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [2, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [2, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [3, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [3, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [4, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [4, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [5, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [5, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [6, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [6, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [7, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [7, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [8, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [8, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
              - Name: !Select [9, !Ref Container1SecretsItemList]
                ValueFrom: !Sub 
                  - '${SecretsArn}:${JSONKey}::'
                  - JSONKey: !Select [9, !Ref Container1SecretsItemList]
                    SecretsArn: !Ref Container1SecretsArn
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast2TargetContainers
          - Name: !Ref Container2ContainerName
            Image: !Join
              - ":"
              - - !Ref Container2ImageArn
                - !Ref Container2ImageTag
            PortMappings: !If
              - TaskDefitionContainer2HasExposedPort
              - - ContainerPort: !Ref Container2Port
                  HostPort: !Ref Container2Port
              - !Ref AWS::NoValue
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer2HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container2SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast3TargetContainers
          - Name: !Ref Container3ContainerName
            Image: !Join
              - ":"
              - - !Ref Container3ImageArn
                - !Ref Container3ImageTag
            PortMappings: !If
              - TaskDefitionContainer3HasExposedPort
              - - ContainerPort: !Ref Container3Port
                  HostPort: !Ref Container3Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9002
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer3HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container3SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast4TargetContainers
          - Name: !Ref Container4ContainerName
            Image: !Join
              - ":"
              - - !Ref Container4ImageArn
                - !Ref Container4ImageTag
            PortMappings: !If
              - TaskDefitionContainer4HasExposedPort
              - - ContainerPort: !Ref Container4Port
                  HostPort: !Ref Container4Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9003
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer4HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container4SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast5TargetContainers
          - Name: !Ref Container5ContainerName
            Image: !Join
              - ":"
              - - !Ref Container5ImageArn
                - !Ref Container5ImageTag
            PortMappings: !If
              - TaskDefitionContainer5HasExposedPort
              - - ContainerPort: !Ref Container5Port
                  HostPort: !Ref Container5Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9004
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer5HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container5SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast6TargetContainers
          - Name: !Ref Container6ContainerName
            Image: !Join
              - ":"
              - - !Ref Container6ImageArn
                - !Ref Container6ImageTag
            PortMappings: !If
              - TaskDefitionContainer6HasExposedPort
              - - ContainerPort: !Ref Container6Port
                  HostPort: !Ref Container6Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9005
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer6HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container6SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast7TargetContainers
          - Name: !Ref Container7ContainerName
            Image: !Join
              - ":"
              - - !Ref Container7ImageArn
                - !Ref Container7ImageTag
            PortMappings: !If
              - TaskDefitionContainer7HasExposedPort
              - - ContainerPort: !Ref Container7Port
                  HostPort: !Ref Container7Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9006
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer7HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container7SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast8TargetContainers
          - Name: !Ref Container8ContainerName
            Image: !Join
              - ":"
              - - !Ref Container8ImageArn
                - !Ref Container8ImageTag
            PortMappings: !If
              - TaskDefitionContainer8HasExposedPort
              - - ContainerPort: !Ref Container8Port
                  HostPort: !Ref Container8Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9007
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer8HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container8SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHasAtLeast9TargetContainers
          - Name: !Ref Container9ContainerName
            Image: !Join
              - ":"
              - - !Ref Container9ImageArn
                - !Ref Container9ImageTag
            PortMappings: !If
              - TaskDefitionContainer9HasExposedPort
              - - ContainerPort: !Ref Container9Port
                  HostPort: !Ref Container9Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9008
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer9HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container9SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
        - !If
          - TaskDefinitionHas10TargetContainers
          - Name: !Ref Container10ContainerName
            Image: !Join
              - ":"
              - - !Ref Container10ImageArn
                - !Ref Container10ImageTag
            PortMappings: !If
              - TaskDefitionContainer10HasExposedPort
              - - ContainerPort: !Ref Container10Port
                  HostPort: !Ref Container10Port
              - !Ref AWS::NoValue
            Environment:
              - Name: dbserver
                Value: 192.168.1.105
              - Name: PLAY_HTTP_PORT
                Value: 9009
            # Send logs to CloudWatch Logs
            Secrets:
              - !If
                - TaskDefitionContainer10HasSecretStack
                - Name: ENV_FROM_JSON
                  ValueFrom:
                    Fn::ImportValue:
                      !Join ["-", [!Ref Container10SecretsStackName, "SecretArn"]]
                - !Ref AWS::NoValue
            LogConfiguration: 
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref AWS::Region
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: ecs
                mode: non-blocking
          - !Ref AWS::NoValue
  # A role needed by ECS
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["", [!Ref ServiceName, ExecutionRole]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: AllowECRCreateLogGroup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - "logs:CreateLogGroup"
                Resource: "*"
        - PolicyName: AllowECRContainerPull
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - "ecr:*"
                Resource: "*"
        - PolicyName: AllowRetrieveSecrets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "kms:Decrypt"
                Resource:
                  - "*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
  # A role for the containers
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["", [!Ref ServiceName, TaskRole]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      # ManagedPolicyArns:
      #   -
      Policies:
        - PolicyName: AllEcsExecPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ecs:ExecuteCommand"
                  - "ssmmessages:CreateControlChannel"
                  - "ssmmessages:CreateDataChannel"
                  - "ssmmessages:OpenControlChannel"
                  - "ssmmessages:OpenDataChannel"
                Resource:
                  - "*"
        - PolicyName: AllowRetrieveSecrets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "kms:Decrypt"
                Resource:
                  - "*"
  # A role needed for auto scaling
  AutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["", [!Ref ServiceName, AutoScalingRole]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateLoadBalancerCondition
    Properties:
      GroupDescription:
        !Join ["", [!Ref ServiceName, LoadBalancerSecurityGroup]]
      VpcId:
        Fn::ImportValue: !Join ["-", [!Ref VPCStackName, "VPCID"]]
      SecurityGroupIngress:
        - !If
          - CreatePublicHTTPListener
          - IpProtocol: tcp
            FromPort: !Ref LoadBalancerHttpPort
            ToPort: !Ref LoadBalancerHttpPort
            CidrIp: 0.0.0.0/0
          - !Ref AWS::NoValue
        - !If
          - CreatePublicHTTPSListener
          - IpProtocol: tcp
            FromPort: !Ref LoadBalancerHttpsPort
            ToPort: !Ref LoadBalancerHttpsPort
            CidrIp: 0.0.0.0/0
          - !Ref AWS::NoValue
  Service:
    Type: AWS::ECS::Service
    # This dependency is needed so that the load balancer is setup correctly in time
    Properties:
      ServiceName: !Ref ServiceName
      Cluster:
        Fn::ImportValue: !Join ["-", [!Ref ECSClusterStackName, "Cluster"]]
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration: !If 
        - IsECSServiceDeploymentControllerUsingECS
        - MinimumHealthyPercent: 100
          MaximumPercent: 200
          DeploymentCircuitBreaker: 
            Enable: true
            Rollback: true
        - !Ref AWS::NoValue
      DeploymentController:
        Type: !Ref ECSServiceDeploymentController
      DesiredCount: !Ref DesiredTaskInstancesInService
      # This may need to be adjusted if the container takes a while to start up
      HealthCheckGracePeriodSeconds: !If
        - CreateLoadBalancerCondition
        - 30
        - !Ref AWS::NoValue
      LaunchType: !Ref LaunchType
      NetworkConfiguration: 
        AwsvpcConfiguration:
          # change to DISABLED if you're using private subnets that have access to a NAT gateway
          AssignPublicIp: DISABLED
          Subnets:
            - Fn::ImportValue:
                !Join ["-", [!Ref VPCStackName, "PrivateSubnet1BID"]]
            - Fn::ImportValue:
                !Join ["-", [!Ref VPCStackName, "PrivateSubnet2BID"]]
          SecurityGroups:
            - Fn::ImportValue:
                !Join [
                  "-",
                  [
                    !Ref SecurityGroupStackName,
                    !Ref SecurityGroupStackExportVariableName,
                  ],
                ]
            - sg-0862003e313464ceb
      
      PlatformVersion: !If
        - IsFargateLaunchType
        - 1.4.0
        - !Ref AWS::NoValue
      ServiceConnectConfiguration: 
        Enabled: true
        LogConfiguration: 
          LogDriver: awslogs
          Options: 
            awslogs-group: !Sub 
              - "/ecs/${Environment}-${ClusterName}-serviceconnect"
              - ClusterName: 
                  Fn::ImportValue: !Join ["-", [!Ref ECSClusterStackName, "Cluster"]]
                Environment: !Ref Environment
            awslogs-region: us-east-1
            awslogs-stream-prefix: ecs
            awslogs-create-group: true
        Namespace: arn:aws:servicediscovery:us-east-1:035913458583:namespace/ns-huprgoodrgbbc5ff
        Services:
          - ClientAliases:
              - Port: !Ref Container1Port
            DiscoveryName: !Ref Container1ContainerName
            PortName: !Sub "${Container1ContainerName}-${Container1Port}"